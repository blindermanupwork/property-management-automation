[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "property-management-automation"
description = "Comprehensive automation system for vacation rental property management"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Property Management Automation Team", email = "automation@example.com"}
]
maintainers = [
    {name = "Property Management Automation Team", email = "automation@example.com"}
]
keywords = ["automation", "property-management", "vacation-rental", "airtable", "csv", "ics", "calendar"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: System :: Monitoring",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Environment :: Console",
]
requires-python = ">=3.8"
dependencies = [
    "airtable-python-wrapper>=0.15.0",
    "pyairtable>=2.0.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "selenium>=4.0.0",
    "webdriver-manager>=3.8.0",
    "beautifulsoup4>=4.10.0",
    "lxml>=4.6.0",
    "pandas>=1.3.0",
    "python-dateutil>=2.8.0",
    "icalendar>=4.0.0",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "pytz>=2021.1",
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=0.4.0",
    "google-auth-httplib2>=0.1.0",
    "google-api-python-client>=2.0.0",
    "pathlib>=1.0.1",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/yourusername/property-management-automation"
Documentation = "https://github.com/yourusername/property-management-automation/blob/main/README.md"
Repository = "https://github.com/yourusername/property-management-automation.git"
"Bug Reports" = "https://github.com/yourusername/property-management-automation/issues"
Changelog = "https://github.com/yourusername/property-management-automation/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-mock>=3.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
    "build>=0.7.0",
    "twine>=3.4.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-mock>=3.0",
    "pytest-asyncio>=0.18.0",
]

[project.scripts]
run-automation = "automation.scripts.run_automation:main"
evolve-scraper = "automation.scripts.evolve_scraper:main"
csv-processor = "automation.scripts.csv_processor:main"
ics-sync = "automation.scripts.ics_sync:main"
gmail-downloader = "automation.scripts.gmail_downloader:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
automation = ["*.md", "*.txt", "*.json"]

[tool.setuptools_scm]
write_to = "src/automation/_version.py"

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["automation"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/automation"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "webdriver_manager.*",
    "icalendar.*",
    "pyairtable.*",
    "airtable.*",
]
ignore_missing_imports = true